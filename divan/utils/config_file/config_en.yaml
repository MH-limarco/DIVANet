#
base:
  Dataset_PATH: "dataset/"

  cfg_PATH: "cfg/"

  save_PATH: "divan_result/"

  data_name: ['train', 'val', 'test']

##  divanet.py  ##
divanet:
  block_name: "#Model Manager"        #Model Manager

  scales_str: ['n', 's', 'm', 'l', 'x']

  fit_training_col: ["#Epoch",         #Epoch
                     "#GPU memory",    #GPU memory
                     "#Train loss",    #Train loss
                     "#image Size"     #image Size
                    ]
  test_training_col: [ "Val",
                       "#End Step",    #End Step
                       "#Train loss",  #Train loss
                       "#Train_acc",   #Train acc
                       ]

  fit_eval_col: [" ",
                 "#End Step",          #End Step
                 "#Eval loss",         #Eval loss
                 "#Eval acc",          #Eval acc
                ]

##  parse_task.py  ##
parse_task:
  block_name: "Task_Inspector"

## chcek/check_file.py ##
check_file:
  block_name: "#Data Inspector"        #Data Inspector

  os_dir:  {'posix':"liunx",
            'nt':"windows"
            }

## module/backbone.py ##
backbone:
  block_name: '#Backbone Manager'      #Backbone Manager


## utils/cuda_ready.py ##
cuda_ready:
  block_name: "#CUDA Manager"          #CUDA Manager

  memory_utilization_command: nvidia-smi --query-gpu=memory.free --format=csv

## utils/dataset.py ##
dataset:
  block_name: '#Dataset Manager'       #Dataset Manager

  image_dtype: uint8

  RGB_index: ['R', 'G', 'B']

  system_info: ["#num workers",        #num workers
                "#RAM limit"           #RAM limit
                ]

  ram_info: ["#Available memory",      #Available memory
             "#Usage memory",          #Usage memory
             "#Intended memory"        #Intended memory
             ]